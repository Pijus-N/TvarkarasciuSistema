@using BlazorServer.Authentication
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<PageTitle>BlazorApp</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
            <CascadingAuthenticationState>
                <AuthorizeView Roles="teacher, student, guardian, administrator">
                    <Authorized>
                        <a @onclick="LogOut" href="">Log out</a>
                    </Authorized>
                    <NotAuthorized>
                        <a href="login">Log in</a>
                        <a href="register">Register</a>
                    </NotAuthorized>
                </AuthorizeView>
        
                <AuthorizeView Roles="teacher">
                    <a>Role: teacher</a>
                </AuthorizeView>
                <AuthorizeView Roles="student">
                    <a>Role: student</a>
                </AuthorizeView>
                <AuthorizeView Roles="guardian">
                    <a>Role: guardian</a>
                </AuthorizeView>
                <AuthorizeView Roles="administrator">
                    <a>Role: administrator</a>
                    <a href="admin">admin</a>
                </AuthorizeView>    
            </CascadingAuthenticationState>
        </div>
       
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code{
    private async Task LogOut()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }
}