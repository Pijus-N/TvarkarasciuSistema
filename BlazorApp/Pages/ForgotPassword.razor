@page "/forgot_password"
@using BlazorServer.Models
@using BlazorServer.Authentication
@using System.Data
@using System.Net.Mail
@using MySqlConnector
@using Dapper
@inject IJSRuntime js
@inject IConfiguration _config
@inject NavigationManager navManager
@inject AuthenticationStateProvider authStateProvider
@inject Blazored.SessionStorage.ISessionStorageService _currentSession

<PageTitle>Remind password</PageTitle>
<h1>Forgot your password?</h1>
<h6>No problem! We will send a message to your email address with your password.</h6>

Your Email
<input @bind="recipient" type="text" class="form-control" id="name"/>
<br />
<a class="btn btn-primary" role="button" @onclick="SendEmail" disabled="@loading">
    @if (loading) 
    {
        <span class="spinner-border spinner-border-sm mr-1"></span>
    }
    Send
</a>
<br />
<br />
<a class="btn btn-primary" href="login" role="button"><span class="oi oi-arrow-thick-left"></span> Back</a>


@code {
    bool loading = false;

    string recipient = "";



    private async void SendEmail()
    {
        loading = true;
        try
        {
            string query = "SELECT * FROM users WHERE (email) = (SELECT '" + recipient + "') LIMIT 1";
            List<User> foundUsers = await SqlLoadData<User>(query);

            if (foundUsers.Count() > 0)
            {
                string _sender = "ISPlaboras@outlook.com";
                string _password = "I1S2P3Laboras";

                SmtpClient client = new SmtpClient("smtp-mail.outlook.com");

                client.Port = 587;
                client.DeliveryMethod = SmtpDeliveryMethod.Network;
                client.UseDefaultCredentials = false;
                System.Net.NetworkCredential credentials =
                            new System.Net.NetworkCredential(_sender, _password);
                client.EnableSsl = true;
                client.Credentials = credentials;

                string body = "We have received a request to remind the password of the account associated with this email address. Your password is " 
                    + foundUsers.First().password + ". \n\n haha";
                string subject = "Music school password reminder.";
                MailMessage message = new MailMessage(_sender, recipient);
                message.Subject = subject;
                message.Body = body;
                client.Send(message);
                js.InvokeVoidAsync("alert", "Email sent!"); // heads up, it will almost certainly go to spam.
                navManager.NavigateTo("/login", true);
            }
            else
            {
                js.InvokeVoidAsync("alert", "There are no users registered with this email. Please make sure your spelling is correct and try again.");
                loading = false;
            }

        }
        catch
        {            
            js.InvokeVoidAsync("alert", "We've encountered an error. Please try again.");
            loading = false;
        }

        
    }

    public async Task<List<T>> SqlLoadData<T>(string query)
    {
        string connstring = _config.GetConnectionString("default");
        using (IDbConnection connection = new MySqlConnection(connstring))
        {
            var rows = await connection.QueryAsync<T>(query, new { });
            return rows.ToList();
        }
    }
}





