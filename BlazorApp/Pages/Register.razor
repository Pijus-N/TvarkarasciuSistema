@page "/register"
@using BlazorServer.Models
@using System.Data
@using MySqlConnector
@using Dapper
@inject IJSRuntime js
@inject IConfiguration _config
@inject NavigationManager navManager

<PageTitle>Registration</PageTitle>
<h1>Create new account</h1>

<EditForm Model="@model" OnValidSubmit="@RegisterUser" OnInvalidSubmit="@InvalidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary/>
    <div class="form-group">
        <label>Name</label>
        <InputText @bind-Value="model.name" class="form-control" />
    </div>
    <div class="form-group">
        <label>Last Name</label>
        <InputText @bind-Value="model.lastname" class="form-control" />
    </div>
    <div class="form-group">
        <label>Email</label>
        <InputText @bind-Value="model.email" class="form-control" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText @bind-Value="model.password" class="form-control" />
    </div>
    <div class="form-group">
        <label>Birth date</label>
        <InputDate @bind-Value="model.birthdate" class="form-control" />
    </div>
    <div>
        <label>Role</label>
        <InputSelect @bind-Value="model.role" class="form-select" required="required">
            <option value="">select role (temporary)</option>
            <option value="teacher">teacher</option>
            <option value="student">student</option>
            <option value="guardian">guardian</option>
            <option value="administrator">administrator</option>
        </InputSelect>
    </div><br>
    <button disabled="@loading" class="btn btn-primary" type="submit">
        @if (loading) 
        {
            <span class="spinner-border spinner-border-sm mr-1"></span>
        }
        Register
    </button>
</EditForm>


@code {
    bool loading = false;

    private User model = new User();

    // makes a user in the database
    // does not check if there is a user registered with that email.
    private async Task RegisterUser() 
    {
        loading = true;     // silly button effect to show that something is happening

        string connstring = _config.GetConnectionString("default");
        using (IDbConnection connection = new MySqlConnection(connstring))
        {
            string query = "INSERT INTO users (name, lastname, email, password, birthdate, role) VALUES('"
            + model.name + "','"
            + model.lastname+ "','"
            + model.email + "','"
            + model.password + "','"
            + model.birthdate + "','"
            + model.role + "');";
            await connection.ExecuteAsync(query, new { });
        }

        loading = false;
        await js.InvokeVoidAsync("alert", "Registration successful");
        navManager.NavigateTo("/login", true);
    }

    private async Task InvalidSubmit()
    {
        await js.InvokeVoidAsync("alert", "Invalid registration data. Please try again.");
    }

}





